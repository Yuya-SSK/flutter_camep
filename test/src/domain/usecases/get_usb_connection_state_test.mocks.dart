// Mocks generated by Mockito 5.0.17 from annotations
// in camep/test/src/domain/usecases/get_usb_connection_state_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:camep/src/domain/entities/usb_connection_state.dart' as _i4;
import 'package:camep/src/domain/repositories/usb_repository.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [UsbRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUsbRepository extends _i1.Mock implements _i2.UsbRepository {
  MockUsbRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.UsbConnectionState> getUsbConnectionState() =>
      (super.noSuchMethod(Invocation.method(#getUsbConnectionState, []),
              returnValue: Future<_i4.UsbConnectionState>.value(
                  _i4.UsbConnectionState.disconnected))
          as _i3.Future<_i4.UsbConnectionState>);
  @override
  _i3.Stream<_i4.UsbConnectionState> observeUsbConnectionState() =>
      (super.noSuchMethod(Invocation.method(#observeUsbConnectionState, []),
              returnValue: Stream<_i4.UsbConnectionState>.empty())
          as _i3.Stream<_i4.UsbConnectionState>);
}
